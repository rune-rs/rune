name: CI

on:
  pull_request: {}
  push:
    branches:
      - 0.13.x

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - run: cargo fmt --all -- --check

  runefmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - run: cargo run --bin rune -- fmt --experimental --recursive --verbose --workspace --check tools scripts

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@1.74
      with:
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - run: cargo clippy --workspace --exclude generate --all-features --all-targets -- -D warnings

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
    - uses: Swatinem/rust-cache@v2
    - run: cargo doc -p rune --all-features
      env:
        RUSTFLAGS: --cfg rune_docsrs
        RUSTDOCFLAGS: --cfg rune_docsrs

  basics:
    runs-on: ubuntu-latest
    needs:
    - rustfmt
    - clippy
    - docs
    steps:
    - run: exit 0

  msrv:
    runs-on: ubuntu-latest
    needs: basics
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@1.74
    - uses: Swatinem/rust-cache@v2
    - run: cargo build --workspace

  miri_rune:
    runs-on: ubuntu-latest
    needs: basics
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri
    - uses: Swatinem/rust-cache@v2
    - run: cargo miri test -p rune --all-features -- runtime hir::arena

  miri_rune_alloc:
    runs-on: ubuntu-latest
    needs: basics
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri
    - uses: Swatinem/rust-cache@v2
    - run: cargo miri test -p rune-alloc --all-features

  no_default_features:
    runs-on: ubuntu-latest
    needs: basics
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo build -p rune --no-default-features --features alloc

  build_feature:
    runs-on: ubuntu-latest
    needs: basics
    strategy:
      fail-fast: false
      matrix:
        feature: [capture-io, "cli,doc", "cli,fmt", cli, workspace, languageserver, byte-code]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo build -p rune --no-default-features --features ${{matrix.feature}}

  wasm:
    runs-on: ubuntu-latest
    needs: basics
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    - uses: Swatinem/rust-cache@v2
    - run: cargo build -p rune-wasm --target wasm32-unknown-unknown

  no_std_minimal:
    runs-on: windows-latest
    needs: basics
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
    - uses: Swatinem/rust-cache@v2
    - run: cargo run --manifest-path=no-std-examples/Cargo.toml --profile unix --example no_std_minimal

  test:
    runs-on: ubuntu-latest
    needs: [no_default_features, build_feature, docs, msrv, miri_rune, miri_rune_alloc, no_std_minimal, wasm]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo build -p rune --no-default-features --features alloc
    - run: cargo test --workspace --all-targets
    - run: cargo test --workspace --doc
    - run: cargo run --bin rune -- check --recursive --experimental scripts
    - run: cargo run --bin rune -- test --recursive --experimental scripts --opt include-std
