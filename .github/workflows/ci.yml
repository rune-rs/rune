name: CI

on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  build:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: build-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}
      - name: Run tests
        run: cargo test --all
      - name: Run example scripts
        run: cargo run --bin rune -- check --recursive --experimental scripts

  build_benchmarks:
    name: Build Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: build_benchmarks-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}
      - run: cargo build --benches

  build_rune_cli:
    name: Build CLI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: build_rune_cli-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}
      - run: cargo build --package rune-cli

  check_formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - run: cargo fmt --all -- --check

  build_documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - run: cargo doc --package rune
        env:
          RUSTFLAGS: --cfg docsrs
          RUSTDOCFLAGS: --cfg docsrs

  build_wasm:
    name: Build Wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
          target: wasm32-unknown-unknown
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: build_wasm-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}
      - run: cargo build --package rune-wasm --target wasm32-unknown-unknown

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.61.0
          profile: minimal
          components: clippy
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: clippy-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}
      - run: cargo clippy --all-features -- -D warnings
