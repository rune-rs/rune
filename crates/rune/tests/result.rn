#[test]
fn result_map() {
    let out = Ok(1).map(|v| v + 1);
    assert_eq!(out, Ok(2));
}

#[test]
fn result_and_then() {
    let out = Ok(1).and_then(|v| Ok(v + 1));
    assert_eq!(out, Ok(2));
}

#[test]
fn result_and_then_error() {
    let out = Ok(1).and_then(|v| Err("Failed"));
    assert_eq!(out, Err("Failed"));
}

#[test]
fn result_expect_some() {
    let out = Ok(1).expect("Ok");
    assert_eq!(out, 1);
}

#[test]
fn result_unwrap_some() {
    let out = Ok(1).unwrap();
    assert_eq!(out, 1);
}

#[test]
fn result_unwrap_or() {
    let out = Err("Error").unwrap_or(10);
    assert_eq!(out, 10);
}
